/* 
 * Reveal API v2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = RevealAPI.Sdk.Client.SwaggerDateConverter;

namespace RevealAPI.Sdk.Models.Resources
{
    /// <summary>
    /// TagPanelItemGet
    /// </summary>
    [DataContract]
    public partial class TagPanelItemGet :  IEquatable<TagPanelItemGet>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets ItemType
        /// </summary>
        [DataMember(Name="itemType", EmitDefaultValue=false)]
        public TagPaneItemTypes? ItemType { get; set; }
        /// <summary>
        /// Gets or Sets TagSetType
        /// </summary>
        [DataMember(Name="tagSetType", EmitDefaultValue=false)]
        public TagSetTypes? TagSetType { get; set; }
        /// <summary>
        /// Gets or Sets FieldDataType
        /// </summary>
        [DataMember(Name="fieldDataType", EmitDefaultValue=false)]
        public FieldDataType? FieldDataType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TagPanelItemGet" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="profileId">profileId.</param>
        /// <param name="paneId">paneId.</param>
        /// <param name="parentId">parentId.</param>
        /// <param name="level">level.</param>
        /// <param name="itemType">itemType.</param>
        /// <param name="tagId">tagId.</param>
        /// <param name="tagName">tagName.</param>
        /// <param name="tagDescription">tagDescription.</param>
        /// <param name="tagSetId">tagSetId.</param>
        /// <param name="tagSetName">tagSetName.</param>
        /// <param name="tagSetDescription">tagSetDescription.</param>
        /// <param name="tagSetType">tagSetType.</param>
        /// <param name="recursive">recursive.</param>
        /// <param name="selectionRequired">selectionRequired.</param>
        /// <param name="fieldName">fieldName.</param>
        /// <param name="fieldLabel">fieldLabel.</param>
        /// <param name="displayOrder">displayOrder.</param>
        /// <param name="isReviewed">isReviewed.</param>
        /// <param name="isDefault">isDefault.</param>
        /// <param name="fieldRequired">fieldRequired.</param>
        /// <param name="isUpdatable">isUpdatable.</param>
        /// <param name="fieldDataType">fieldDataType.</param>
        /// <param name="fieldDisplayName">fieldDisplayName.</param>
        /// <param name="createdByUserId">createdByUserId.</param>
        /// <param name="createdDateTime">createdDateTime.</param>
        /// <param name="modifiedByUserId">modifiedByUserId.</param>
        /// <param name="modifiedDateTime">modifiedDateTime.</param>
        public TagPanelItemGet(int? id = default(int?), int? profileId = default(int?), int? paneId = default(int?), int? parentId = default(int?), int? level = default(int?), TagPaneItemTypes? itemType = default(TagPaneItemTypes?), int? tagId = default(int?), string tagName = default(string), string tagDescription = default(string), int? tagSetId = default(int?), string tagSetName = default(string), string tagSetDescription = default(string), TagSetTypes? tagSetType = default(TagSetTypes?), bool? recursive = default(bool?), bool? selectionRequired = default(bool?), string fieldName = default(string), string fieldLabel = default(string), int? displayOrder = default(int?), bool? isReviewed = default(bool?), bool? isDefault = default(bool?), bool? fieldRequired = default(bool?), bool? isUpdatable = default(bool?), FieldDataType? fieldDataType = default(FieldDataType?), string fieldDisplayName = default(string), int? createdByUserId = default(int?), DateTime? createdDateTime = default(DateTime?), int? modifiedByUserId = default(int?), DateTime? modifiedDateTime = default(DateTime?))
        {
            this.Id = id;
            this.ProfileId = profileId;
            this.PaneId = paneId;
            this.ParentId = parentId;
            this.Level = level;
            this.ItemType = itemType;
            this.TagId = tagId;
            this.TagName = tagName;
            this.TagDescription = tagDescription;
            this.TagSetId = tagSetId;
            this.TagSetName = tagSetName;
            this.TagSetDescription = tagSetDescription;
            this.TagSetType = tagSetType;
            this.Recursive = recursive;
            this.SelectionRequired = selectionRequired;
            this.FieldName = fieldName;
            this.FieldLabel = fieldLabel;
            this.DisplayOrder = displayOrder;
            this.IsReviewed = isReviewed;
            this.IsDefault = isDefault;
            this.FieldRequired = fieldRequired;
            this.IsUpdatable = isUpdatable;
            this.FieldDataType = fieldDataType;
            this.FieldDisplayName = fieldDisplayName;
            this.CreatedByUserId = createdByUserId;
            this.CreatedDateTime = createdDateTime;
            this.ModifiedByUserId = modifiedByUserId;
            this.ModifiedDateTime = modifiedDateTime;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or Sets ProfileId
        /// </summary>
        [DataMember(Name="profileId", EmitDefaultValue=false)]
        public int? ProfileId { get; set; }

        /// <summary>
        /// Gets or Sets PaneId
        /// </summary>
        [DataMember(Name="paneId", EmitDefaultValue=false)]
        public int? PaneId { get; set; }

        /// <summary>
        /// Gets or Sets ParentId
        /// </summary>
        [DataMember(Name="parentId", EmitDefaultValue=false)]
        public int? ParentId { get; set; }

        /// <summary>
        /// Gets or Sets Level
        /// </summary>
        [DataMember(Name="level", EmitDefaultValue=false)]
        public int? Level { get; set; }


        /// <summary>
        /// Gets or Sets TagId
        /// </summary>
        [DataMember(Name="tagId", EmitDefaultValue=false)]
        public int? TagId { get; set; }

        /// <summary>
        /// Gets or Sets TagName
        /// </summary>
        [DataMember(Name="tagName", EmitDefaultValue=false)]
        public string TagName { get; set; }

        /// <summary>
        /// Gets or Sets TagDescription
        /// </summary>
        [DataMember(Name="tagDescription", EmitDefaultValue=false)]
        public string TagDescription { get; set; }

        /// <summary>
        /// Gets or Sets TagSetId
        /// </summary>
        [DataMember(Name="tagSetId", EmitDefaultValue=false)]
        public int? TagSetId { get; set; }

        /// <summary>
        /// Gets or Sets TagSetName
        /// </summary>
        [DataMember(Name="tagSetName", EmitDefaultValue=false)]
        public string TagSetName { get; set; }

        /// <summary>
        /// Gets or Sets TagSetDescription
        /// </summary>
        [DataMember(Name="tagSetDescription", EmitDefaultValue=false)]
        public string TagSetDescription { get; set; }


        /// <summary>
        /// Gets or Sets Recursive
        /// </summary>
        [DataMember(Name="recursive", EmitDefaultValue=false)]
        public bool? Recursive { get; set; }

        /// <summary>
        /// Gets or Sets SelectionRequired
        /// </summary>
        [DataMember(Name="selectionRequired", EmitDefaultValue=false)]
        public bool? SelectionRequired { get; set; }

        /// <summary>
        /// Gets or Sets FieldName
        /// </summary>
        [DataMember(Name="fieldName", EmitDefaultValue=false)]
        public string FieldName { get; set; }

        /// <summary>
        /// Gets or Sets FieldLabel
        /// </summary>
        [DataMember(Name="fieldLabel", EmitDefaultValue=false)]
        public string FieldLabel { get; set; }

        /// <summary>
        /// Gets or Sets DisplayOrder
        /// </summary>
        [DataMember(Name="displayOrder", EmitDefaultValue=false)]
        public int? DisplayOrder { get; set; }

        /// <summary>
        /// Gets or Sets IsReviewed
        /// </summary>
        [DataMember(Name="isReviewed", EmitDefaultValue=false)]
        public bool? IsReviewed { get; set; }

        /// <summary>
        /// Gets or Sets IsDefault
        /// </summary>
        [DataMember(Name="isDefault", EmitDefaultValue=false)]
        public bool? IsDefault { get; set; }

        /// <summary>
        /// Gets or Sets FieldRequired
        /// </summary>
        [DataMember(Name="fieldRequired", EmitDefaultValue=false)]
        public bool? FieldRequired { get; set; }

        /// <summary>
        /// Gets or Sets IsUpdatable
        /// </summary>
        [DataMember(Name="isUpdatable", EmitDefaultValue=false)]
        public bool? IsUpdatable { get; set; }


        /// <summary>
        /// Gets or Sets FieldDisplayName
        /// </summary>
        [DataMember(Name="fieldDisplayName", EmitDefaultValue=false)]
        public string FieldDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByUserId
        /// </summary>
        [DataMember(Name="createdByUserId", EmitDefaultValue=false)]
        public int? CreatedByUserId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDateTime
        /// </summary>
        [DataMember(Name="createdDateTime", EmitDefaultValue=false)]
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedByUserId
        /// </summary>
        [DataMember(Name="modifiedByUserId", EmitDefaultValue=false)]
        public int? ModifiedByUserId { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedDateTime
        /// </summary>
        [DataMember(Name="modifiedDateTime", EmitDefaultValue=false)]
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TagPanelItemGet {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ProfileId: ").Append(ProfileId).Append("\n");
            sb.Append("  PaneId: ").Append(PaneId).Append("\n");
            sb.Append("  ParentId: ").Append(ParentId).Append("\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("  ItemType: ").Append(ItemType).Append("\n");
            sb.Append("  TagId: ").Append(TagId).Append("\n");
            sb.Append("  TagName: ").Append(TagName).Append("\n");
            sb.Append("  TagDescription: ").Append(TagDescription).Append("\n");
            sb.Append("  TagSetId: ").Append(TagSetId).Append("\n");
            sb.Append("  TagSetName: ").Append(TagSetName).Append("\n");
            sb.Append("  TagSetDescription: ").Append(TagSetDescription).Append("\n");
            sb.Append("  TagSetType: ").Append(TagSetType).Append("\n");
            sb.Append("  Recursive: ").Append(Recursive).Append("\n");
            sb.Append("  SelectionRequired: ").Append(SelectionRequired).Append("\n");
            sb.Append("  FieldName: ").Append(FieldName).Append("\n");
            sb.Append("  FieldLabel: ").Append(FieldLabel).Append("\n");
            sb.Append("  DisplayOrder: ").Append(DisplayOrder).Append("\n");
            sb.Append("  IsReviewed: ").Append(IsReviewed).Append("\n");
            sb.Append("  IsDefault: ").Append(IsDefault).Append("\n");
            sb.Append("  FieldRequired: ").Append(FieldRequired).Append("\n");
            sb.Append("  IsUpdatable: ").Append(IsUpdatable).Append("\n");
            sb.Append("  FieldDataType: ").Append(FieldDataType).Append("\n");
            sb.Append("  FieldDisplayName: ").Append(FieldDisplayName).Append("\n");
            sb.Append("  CreatedByUserId: ").Append(CreatedByUserId).Append("\n");
            sb.Append("  CreatedDateTime: ").Append(CreatedDateTime).Append("\n");
            sb.Append("  ModifiedByUserId: ").Append(ModifiedByUserId).Append("\n");
            sb.Append("  ModifiedDateTime: ").Append(ModifiedDateTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TagPanelItemGet);
        }

        /// <summary>
        /// Returns true if TagPanelItemGet instances are equal
        /// </summary>
        /// <param name="input">Instance of TagPanelItemGet to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TagPanelItemGet input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ProfileId == input.ProfileId ||
                    (this.ProfileId != null &&
                    this.ProfileId.Equals(input.ProfileId))
                ) && 
                (
                    this.PaneId == input.PaneId ||
                    (this.PaneId != null &&
                    this.PaneId.Equals(input.PaneId))
                ) && 
                (
                    this.ParentId == input.ParentId ||
                    (this.ParentId != null &&
                    this.ParentId.Equals(input.ParentId))
                ) && 
                (
                    this.Level == input.Level ||
                    (this.Level != null &&
                    this.Level.Equals(input.Level))
                ) && 
                (
                    this.ItemType == input.ItemType ||
                    (this.ItemType != null &&
                    this.ItemType.Equals(input.ItemType))
                ) && 
                (
                    this.TagId == input.TagId ||
                    (this.TagId != null &&
                    this.TagId.Equals(input.TagId))
                ) && 
                (
                    this.TagName == input.TagName ||
                    (this.TagName != null &&
                    this.TagName.Equals(input.TagName))
                ) && 
                (
                    this.TagDescription == input.TagDescription ||
                    (this.TagDescription != null &&
                    this.TagDescription.Equals(input.TagDescription))
                ) && 
                (
                    this.TagSetId == input.TagSetId ||
                    (this.TagSetId != null &&
                    this.TagSetId.Equals(input.TagSetId))
                ) && 
                (
                    this.TagSetName == input.TagSetName ||
                    (this.TagSetName != null &&
                    this.TagSetName.Equals(input.TagSetName))
                ) && 
                (
                    this.TagSetDescription == input.TagSetDescription ||
                    (this.TagSetDescription != null &&
                    this.TagSetDescription.Equals(input.TagSetDescription))
                ) && 
                (
                    this.TagSetType == input.TagSetType ||
                    (this.TagSetType != null &&
                    this.TagSetType.Equals(input.TagSetType))
                ) && 
                (
                    this.Recursive == input.Recursive ||
                    (this.Recursive != null &&
                    this.Recursive.Equals(input.Recursive))
                ) && 
                (
                    this.SelectionRequired == input.SelectionRequired ||
                    (this.SelectionRequired != null &&
                    this.SelectionRequired.Equals(input.SelectionRequired))
                ) && 
                (
                    this.FieldName == input.FieldName ||
                    (this.FieldName != null &&
                    this.FieldName.Equals(input.FieldName))
                ) && 
                (
                    this.FieldLabel == input.FieldLabel ||
                    (this.FieldLabel != null &&
                    this.FieldLabel.Equals(input.FieldLabel))
                ) && 
                (
                    this.DisplayOrder == input.DisplayOrder ||
                    (this.DisplayOrder != null &&
                    this.DisplayOrder.Equals(input.DisplayOrder))
                ) && 
                (
                    this.IsReviewed == input.IsReviewed ||
                    (this.IsReviewed != null &&
                    this.IsReviewed.Equals(input.IsReviewed))
                ) && 
                (
                    this.IsDefault == input.IsDefault ||
                    (this.IsDefault != null &&
                    this.IsDefault.Equals(input.IsDefault))
                ) && 
                (
                    this.FieldRequired == input.FieldRequired ||
                    (this.FieldRequired != null &&
                    this.FieldRequired.Equals(input.FieldRequired))
                ) && 
                (
                    this.IsUpdatable == input.IsUpdatable ||
                    (this.IsUpdatable != null &&
                    this.IsUpdatable.Equals(input.IsUpdatable))
                ) && 
                (
                    this.FieldDataType == input.FieldDataType ||
                    (this.FieldDataType != null &&
                    this.FieldDataType.Equals(input.FieldDataType))
                ) && 
                (
                    this.FieldDisplayName == input.FieldDisplayName ||
                    (this.FieldDisplayName != null &&
                    this.FieldDisplayName.Equals(input.FieldDisplayName))
                ) && 
                (
                    this.CreatedByUserId == input.CreatedByUserId ||
                    (this.CreatedByUserId != null &&
                    this.CreatedByUserId.Equals(input.CreatedByUserId))
                ) && 
                (
                    this.CreatedDateTime == input.CreatedDateTime ||
                    (this.CreatedDateTime != null &&
                    this.CreatedDateTime.Equals(input.CreatedDateTime))
                ) && 
                (
                    this.ModifiedByUserId == input.ModifiedByUserId ||
                    (this.ModifiedByUserId != null &&
                    this.ModifiedByUserId.Equals(input.ModifiedByUserId))
                ) && 
                (
                    this.ModifiedDateTime == input.ModifiedDateTime ||
                    (this.ModifiedDateTime != null &&
                    this.ModifiedDateTime.Equals(input.ModifiedDateTime))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ProfileId != null)
                    hashCode = hashCode * 59 + this.ProfileId.GetHashCode();
                if (this.PaneId != null)
                    hashCode = hashCode * 59 + this.PaneId.GetHashCode();
                if (this.ParentId != null)
                    hashCode = hashCode * 59 + this.ParentId.GetHashCode();
                if (this.Level != null)
                    hashCode = hashCode * 59 + this.Level.GetHashCode();
                if (this.ItemType != null)
                    hashCode = hashCode * 59 + this.ItemType.GetHashCode();
                if (this.TagId != null)
                    hashCode = hashCode * 59 + this.TagId.GetHashCode();
                if (this.TagName != null)
                    hashCode = hashCode * 59 + this.TagName.GetHashCode();
                if (this.TagDescription != null)
                    hashCode = hashCode * 59 + this.TagDescription.GetHashCode();
                if (this.TagSetId != null)
                    hashCode = hashCode * 59 + this.TagSetId.GetHashCode();
                if (this.TagSetName != null)
                    hashCode = hashCode * 59 + this.TagSetName.GetHashCode();
                if (this.TagSetDescription != null)
                    hashCode = hashCode * 59 + this.TagSetDescription.GetHashCode();
                if (this.TagSetType != null)
                    hashCode = hashCode * 59 + this.TagSetType.GetHashCode();
                if (this.Recursive != null)
                    hashCode = hashCode * 59 + this.Recursive.GetHashCode();
                if (this.SelectionRequired != null)
                    hashCode = hashCode * 59 + this.SelectionRequired.GetHashCode();
                if (this.FieldName != null)
                    hashCode = hashCode * 59 + this.FieldName.GetHashCode();
                if (this.FieldLabel != null)
                    hashCode = hashCode * 59 + this.FieldLabel.GetHashCode();
                if (this.DisplayOrder != null)
                    hashCode = hashCode * 59 + this.DisplayOrder.GetHashCode();
                if (this.IsReviewed != null)
                    hashCode = hashCode * 59 + this.IsReviewed.GetHashCode();
                if (this.IsDefault != null)
                    hashCode = hashCode * 59 + this.IsDefault.GetHashCode();
                if (this.FieldRequired != null)
                    hashCode = hashCode * 59 + this.FieldRequired.GetHashCode();
                if (this.IsUpdatable != null)
                    hashCode = hashCode * 59 + this.IsUpdatable.GetHashCode();
                if (this.FieldDataType != null)
                    hashCode = hashCode * 59 + this.FieldDataType.GetHashCode();
                if (this.FieldDisplayName != null)
                    hashCode = hashCode * 59 + this.FieldDisplayName.GetHashCode();
                if (this.CreatedByUserId != null)
                    hashCode = hashCode * 59 + this.CreatedByUserId.GetHashCode();
                if (this.CreatedDateTime != null)
                    hashCode = hashCode * 59 + this.CreatedDateTime.GetHashCode();
                if (this.ModifiedByUserId != null)
                    hashCode = hashCode * 59 + this.ModifiedByUserId.GetHashCode();
                if (this.ModifiedDateTime != null)
                    hashCode = hashCode * 59 + this.ModifiedDateTime.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
