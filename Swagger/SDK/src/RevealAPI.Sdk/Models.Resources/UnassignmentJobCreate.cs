/* 
 * Reveal API v2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = RevealAPI.Sdk.Client.SwaggerDateConverter;

namespace RevealAPI.Sdk.Models.Resources
{
    /// <summary>
    /// UnassignmentJobCreate
    /// </summary>
    [DataContract]
    public partial class UnassignmentJobCreate :  IEquatable<UnassignmentJobCreate>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets DocumentSelectionType
        /// </summary>
        [DataMember(Name="documentSelectionType", EmitDefaultValue=false)]
        public DocumentSelection? DocumentSelectionType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UnassignmentJobCreate" /> class.
        /// </summary>
        /// <param name="documentSelectionType">documentSelectionType.</param>
        /// <param name="selectedDocumentItemIds">selectedDocumentItemIds.</param>
        /// <param name="unassignments">unassignments.</param>
        /// <param name="searchJobId">searchJobId.</param>
        /// <param name="searchCriteria">searchCriteria.</param>
        public UnassignmentJobCreate(DocumentSelection? documentSelectionType = default(DocumentSelection?), List<long?> selectedDocumentItemIds = default(List<long?>), UnassignmentJobCreateUnassignments unassignments = default(UnassignmentJobCreateUnassignments), long? searchJobId = default(long?), BulkActionSearchCriteria searchCriteria = default(BulkActionSearchCriteria))
        {
            this.DocumentSelectionType = documentSelectionType;
            this.SelectedDocumentItemIds = selectedDocumentItemIds;
            this.Unassignments = unassignments;
            this.SearchJobId = searchJobId;
            this.SearchCriteria = searchCriteria;
        }
        

        /// <summary>
        /// Gets or Sets SelectedDocumentItemIds
        /// </summary>
        [DataMember(Name="selectedDocumentItemIds", EmitDefaultValue=false)]
        public List<long?> SelectedDocumentItemIds { get; set; }

        /// <summary>
        /// Gets or Sets Unassignments
        /// </summary>
        [DataMember(Name="unassignments", EmitDefaultValue=false)]
        public UnassignmentJobCreateUnassignments Unassignments { get; set; }

        /// <summary>
        /// Gets or Sets SearchJobId
        /// </summary>
        [DataMember(Name="searchJobId", EmitDefaultValue=false)]
        public long? SearchJobId { get; set; }

        /// <summary>
        /// Gets or Sets SearchCriteria
        /// </summary>
        [DataMember(Name="searchCriteria", EmitDefaultValue=false)]
        public BulkActionSearchCriteria SearchCriteria { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UnassignmentJobCreate {\n");
            sb.Append("  DocumentSelectionType: ").Append(DocumentSelectionType).Append("\n");
            sb.Append("  SelectedDocumentItemIds: ").Append(SelectedDocumentItemIds).Append("\n");
            sb.Append("  Unassignments: ").Append(Unassignments).Append("\n");
            sb.Append("  SearchJobId: ").Append(SearchJobId).Append("\n");
            sb.Append("  SearchCriteria: ").Append(SearchCriteria).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UnassignmentJobCreate);
        }

        /// <summary>
        /// Returns true if UnassignmentJobCreate instances are equal
        /// </summary>
        /// <param name="input">Instance of UnassignmentJobCreate to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UnassignmentJobCreate input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DocumentSelectionType == input.DocumentSelectionType ||
                    (this.DocumentSelectionType != null &&
                    this.DocumentSelectionType.Equals(input.DocumentSelectionType))
                ) && 
                (
                    this.SelectedDocumentItemIds == input.SelectedDocumentItemIds ||
                    this.SelectedDocumentItemIds != null &&
                    this.SelectedDocumentItemIds.SequenceEqual(input.SelectedDocumentItemIds)
                ) && 
                (
                    this.Unassignments == input.Unassignments ||
                    (this.Unassignments != null &&
                    this.Unassignments.Equals(input.Unassignments))
                ) && 
                (
                    this.SearchJobId == input.SearchJobId ||
                    (this.SearchJobId != null &&
                    this.SearchJobId.Equals(input.SearchJobId))
                ) && 
                (
                    this.SearchCriteria == input.SearchCriteria ||
                    (this.SearchCriteria != null &&
                    this.SearchCriteria.Equals(input.SearchCriteria))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DocumentSelectionType != null)
                    hashCode = hashCode * 59 + this.DocumentSelectionType.GetHashCode();
                if (this.SelectedDocumentItemIds != null)
                    hashCode = hashCode * 59 + this.SelectedDocumentItemIds.GetHashCode();
                if (this.Unassignments != null)
                    hashCode = hashCode * 59 + this.Unassignments.GetHashCode();
                if (this.SearchJobId != null)
                    hashCode = hashCode * 59 + this.SearchJobId.GetHashCode();
                if (this.SearchCriteria != null)
                    hashCode = hashCode * 59 + this.SearchCriteria.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
