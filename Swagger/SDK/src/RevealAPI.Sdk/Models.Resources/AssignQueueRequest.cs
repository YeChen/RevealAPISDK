/* 
 * Reveal API v2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = RevealAPI.Sdk.Client.SwaggerDateConverter;

namespace RevealAPI.Sdk.Models.Resources
{
    /// <summary>
    /// AssignQueueRequest
    /// </summary>
    [DataContract]
    public partial class AssignQueueRequest :  IEquatable<AssignQueueRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AssignQueueRequest" /> class.
        /// </summary>
        /// <param name="userId">userId.</param>
        /// <param name="modelId">modelId.</param>
        /// <param name="trainingQueueId">trainingQueueId.</param>
        /// <param name="trainingQueueName">trainingQueueName.</param>
        /// <param name="tagProfileId">tagProfileId.</param>
        public AssignQueueRequest(int? userId = default(int?), int? modelId = default(int?), long? trainingQueueId = default(long?), string trainingQueueName = default(string), int? tagProfileId = default(int?))
        {
            this.UserId = userId;
            this.ModelId = modelId;
            this.TrainingQueueId = trainingQueueId;
            this.TrainingQueueName = trainingQueueName;
            this.TagProfileId = tagProfileId;
        }
        
        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name="userId", EmitDefaultValue=false)]
        public int? UserId { get; set; }

        /// <summary>
        /// Gets or Sets ModelId
        /// </summary>
        [DataMember(Name="modelId", EmitDefaultValue=false)]
        public int? ModelId { get; set; }

        /// <summary>
        /// Gets or Sets TrainingQueueId
        /// </summary>
        [DataMember(Name="trainingQueueId", EmitDefaultValue=false)]
        public long? TrainingQueueId { get; set; }

        /// <summary>
        /// Gets or Sets TrainingQueueName
        /// </summary>
        [DataMember(Name="trainingQueueName", EmitDefaultValue=false)]
        public string TrainingQueueName { get; set; }

        /// <summary>
        /// Gets or Sets TagProfileId
        /// </summary>
        [DataMember(Name="tagProfileId", EmitDefaultValue=false)]
        public int? TagProfileId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AssignQueueRequest {\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  ModelId: ").Append(ModelId).Append("\n");
            sb.Append("  TrainingQueueId: ").Append(TrainingQueueId).Append("\n");
            sb.Append("  TrainingQueueName: ").Append(TrainingQueueName).Append("\n");
            sb.Append("  TagProfileId: ").Append(TagProfileId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AssignQueueRequest);
        }

        /// <summary>
        /// Returns true if AssignQueueRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of AssignQueueRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AssignQueueRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                ) && 
                (
                    this.ModelId == input.ModelId ||
                    (this.ModelId != null &&
                    this.ModelId.Equals(input.ModelId))
                ) && 
                (
                    this.TrainingQueueId == input.TrainingQueueId ||
                    (this.TrainingQueueId != null &&
                    this.TrainingQueueId.Equals(input.TrainingQueueId))
                ) && 
                (
                    this.TrainingQueueName == input.TrainingQueueName ||
                    (this.TrainingQueueName != null &&
                    this.TrainingQueueName.Equals(input.TrainingQueueName))
                ) && 
                (
                    this.TagProfileId == input.TagProfileId ||
                    (this.TagProfileId != null &&
                    this.TagProfileId.Equals(input.TagProfileId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                if (this.ModelId != null)
                    hashCode = hashCode * 59 + this.ModelId.GetHashCode();
                if (this.TrainingQueueId != null)
                    hashCode = hashCode * 59 + this.TrainingQueueId.GetHashCode();
                if (this.TrainingQueueName != null)
                    hashCode = hashCode * 59 + this.TrainingQueueName.GetHashCode();
                if (this.TagProfileId != null)
                    hashCode = hashCode * 59 + this.TagProfileId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
