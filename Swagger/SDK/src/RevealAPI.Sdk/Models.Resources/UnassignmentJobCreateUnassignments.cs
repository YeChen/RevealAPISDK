/* 
 * Reveal API v2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = RevealAPI.Sdk.Client.SwaggerDateConverter;

namespace RevealAPI.Sdk.Models.Resources
{
    /// <summary>
    /// UnassignmentJobCreateUnassignments
    /// </summary>
    [DataContract]
    public partial class UnassignmentJobCreateUnassignments :  IEquatable<UnassignmentJobCreateUnassignments>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UnassignmentJobCreateUnassignments" /> class.
        /// </summary>
        /// <param name="assignmentFolder">assignmentFolder.</param>
        /// <param name="batch">batch.</param>
        /// <param name="custodian">custodian.</param>
        /// <param name="job">job.</param>
        /// <param name="review">review.</param>
        public UnassignmentJobCreateUnassignments(List<string> assignmentFolder = default(List<string>), List<string> batch = default(List<string>), List<string> custodian = default(List<string>), List<string> job = default(List<string>), List<string> review = default(List<string>))
        {
            this.AssignmentFolder = assignmentFolder;
            this.Batch = batch;
            this.Custodian = custodian;
            this.Job = job;
            this.Review = review;
        }
        
        /// <summary>
        /// Gets or Sets AssignmentFolder
        /// </summary>
        [DataMember(Name="AssignmentFolder", EmitDefaultValue=false)]
        public List<string> AssignmentFolder { get; set; }

        /// <summary>
        /// Gets or Sets Batch
        /// </summary>
        [DataMember(Name="Batch", EmitDefaultValue=false)]
        public List<string> Batch { get; set; }

        /// <summary>
        /// Gets or Sets Custodian
        /// </summary>
        [DataMember(Name="Custodian", EmitDefaultValue=false)]
        public List<string> Custodian { get; set; }

        /// <summary>
        /// Gets or Sets Job
        /// </summary>
        [DataMember(Name="Job", EmitDefaultValue=false)]
        public List<string> Job { get; set; }

        /// <summary>
        /// Gets or Sets Review
        /// </summary>
        [DataMember(Name="Review", EmitDefaultValue=false)]
        public List<string> Review { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UnassignmentJobCreateUnassignments {\n");
            sb.Append("  AssignmentFolder: ").Append(AssignmentFolder).Append("\n");
            sb.Append("  Batch: ").Append(Batch).Append("\n");
            sb.Append("  Custodian: ").Append(Custodian).Append("\n");
            sb.Append("  Job: ").Append(Job).Append("\n");
            sb.Append("  Review: ").Append(Review).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UnassignmentJobCreateUnassignments);
        }

        /// <summary>
        /// Returns true if UnassignmentJobCreateUnassignments instances are equal
        /// </summary>
        /// <param name="input">Instance of UnassignmentJobCreateUnassignments to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UnassignmentJobCreateUnassignments input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AssignmentFolder == input.AssignmentFolder ||
                    this.AssignmentFolder != null &&
                    this.AssignmentFolder.SequenceEqual(input.AssignmentFolder)
                ) && 
                (
                    this.Batch == input.Batch ||
                    this.Batch != null &&
                    this.Batch.SequenceEqual(input.Batch)
                ) && 
                (
                    this.Custodian == input.Custodian ||
                    this.Custodian != null &&
                    this.Custodian.SequenceEqual(input.Custodian)
                ) && 
                (
                    this.Job == input.Job ||
                    this.Job != null &&
                    this.Job.SequenceEqual(input.Job)
                ) && 
                (
                    this.Review == input.Review ||
                    this.Review != null &&
                    this.Review.SequenceEqual(input.Review)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AssignmentFolder != null)
                    hashCode = hashCode * 59 + this.AssignmentFolder.GetHashCode();
                if (this.Batch != null)
                    hashCode = hashCode * 59 + this.Batch.GetHashCode();
                if (this.Custodian != null)
                    hashCode = hashCode * 59 + this.Custodian.GetHashCode();
                if (this.Job != null)
                    hashCode = hashCode * 59 + this.Job.GetHashCode();
                if (this.Review != null)
                    hashCode = hashCode * 59 + this.Review.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
