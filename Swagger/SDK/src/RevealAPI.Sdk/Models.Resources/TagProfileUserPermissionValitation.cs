/* 
 * Reveal API v2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = RevealAPI.Sdk.Client.SwaggerDateConverter;

namespace RevealAPI.Sdk.Models.Resources
{
    /// <summary>
    /// TagProfileUserPermissionValitation
    /// </summary>
    [DataContract]
    public partial class TagProfileUserPermissionValitation :  IEquatable<TagProfileUserPermissionValitation>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets ValidationType
        /// </summary>
        [DataMember(Name="validationType", EmitDefaultValue=false)]
        public TagProfileValidationType? ValidationType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TagProfileUserPermissionValitation" /> class.
        /// </summary>
        /// <param name="assignedIds">assignedIds.</param>
        /// <param name="validationType">validationType.</param>
        public TagProfileUserPermissionValitation(List<long?> assignedIds = default(List<long?>), TagProfileValidationType? validationType = default(TagProfileValidationType?))
        {
            this.AssignedIds = assignedIds;
            this.ValidationType = validationType;
        }
        
        /// <summary>
        /// Gets or Sets AssignedIds
        /// </summary>
        [DataMember(Name="assignedIds", EmitDefaultValue=false)]
        public List<long?> AssignedIds { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TagProfileUserPermissionValitation {\n");
            sb.Append("  AssignedIds: ").Append(AssignedIds).Append("\n");
            sb.Append("  ValidationType: ").Append(ValidationType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TagProfileUserPermissionValitation);
        }

        /// <summary>
        /// Returns true if TagProfileUserPermissionValitation instances are equal
        /// </summary>
        /// <param name="input">Instance of TagProfileUserPermissionValitation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TagProfileUserPermissionValitation input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AssignedIds == input.AssignedIds ||
                    this.AssignedIds != null &&
                    this.AssignedIds.SequenceEqual(input.AssignedIds)
                ) && 
                (
                    this.ValidationType == input.ValidationType ||
                    (this.ValidationType != null &&
                    this.ValidationType.Equals(input.ValidationType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AssignedIds != null)
                    hashCode = hashCode * 59 + this.AssignedIds.GetHashCode();
                if (this.ValidationType != null)
                    hashCode = hashCode * 59 + this.ValidationType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
