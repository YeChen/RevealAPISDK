/* 
 * Reveal API v2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Defines JobStatus
    /// </summary>
    
    public enum JobStatus
    {
        
        /// <summary>
        /// Enum Created for value: Created
        /// </summary>
        
        Created = Created,
        
        /// <summary>
        /// Enum Submitted for value: Submitted
        /// </summary>
        
        Submitted = Submitted,
        
        /// <summary>
        /// Enum InProcess for value: InProcess
        /// </summary>
        
        InProcess = InProcess,
        
        /// <summary>
        /// Enum Complete for value: Complete
        /// </summary>
        
        Complete = Complete,
        
        /// <summary>
        /// Enum Error for value: Error
        /// </summary>
        
        Error = Error,
        
        /// <summary>
        /// Enum Cancelled for value: Cancelled
        /// </summary>
        
        Cancelled = Cancelled,
        
        /// <summary>
        /// Enum CancelPending for value: CancelPending
        /// </summary>
        
        CancelPending = CancelPending,
        
        /// <summary>
        /// Enum Deleted for value: Deleted
        /// </summary>
        
        Deleted = Deleted,
        
        /// <summary>
        /// Enum Modified for value: Modified
        /// </summary>
        
        Modified = Modified,
        
        /// <summary>
        /// Enum CompleteWithErrors for value: CompleteWithErrors
        /// </summary>
        
        CompleteWithErrors = CompleteWithErrors,
        
        /// <summary>
        /// Enum Unknown for value: Unknown
        /// </summary>
        
        Unknown = Unknown
    }

}
