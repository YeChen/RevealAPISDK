/* 
 * Reveal API v2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// SearchJobResponse
    /// </summary>
    [DataContract]
    public partial class SearchJobResponse :  IEquatable<SearchJobResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchJobResponse" /> class.
        /// </summary>
        /// <param name="SavedSearchId">SavedSearchId.</param>
        /// <param name="HistoryId">HistoryId.</param>
        /// <param name="SearchJobSubmissionResponse">SearchJobSubmissionResponse.</param>
        public SearchJobResponse(long? SavedSearchId = default(long?), long? HistoryId = default(long?), CreateJobResponse SearchJobSubmissionResponse = default(CreateJobResponse))
        {
            this.SavedSearchId = SavedSearchId;
            this.HistoryId = HistoryId;
            this.SearchJobSubmissionResponse = SearchJobSubmissionResponse;
        }
        
        /// <summary>
        /// Gets or Sets SavedSearchId
        /// </summary>
        [DataMember(Name="savedSearchId", EmitDefaultValue=false)]
        public long? SavedSearchId { get; set; }

        /// <summary>
        /// Gets or Sets HistoryId
        /// </summary>
        [DataMember(Name="historyId", EmitDefaultValue=false)]
        public long? HistoryId { get; set; }

        /// <summary>
        /// Gets or Sets SearchJobSubmissionResponse
        /// </summary>
        [DataMember(Name="searchJobSubmissionResponse", EmitDefaultValue=false)]
        public CreateJobResponse SearchJobSubmissionResponse { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SearchJobResponse {\n");
            sb.Append("  SavedSearchId: ").Append(SavedSearchId).Append("\n");
            sb.Append("  HistoryId: ").Append(HistoryId).Append("\n");
            sb.Append("  SearchJobSubmissionResponse: ").Append(SearchJobSubmissionResponse).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SearchJobResponse);
        }

        /// <summary>
        /// Returns true if SearchJobResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of SearchJobResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SearchJobResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SavedSearchId == input.SavedSearchId ||
                    (this.SavedSearchId != null &&
                    this.SavedSearchId.Equals(input.SavedSearchId))
                ) && 
                (
                    this.HistoryId == input.HistoryId ||
                    (this.HistoryId != null &&
                    this.HistoryId.Equals(input.HistoryId))
                ) && 
                (
                    this.SearchJobSubmissionResponse == input.SearchJobSubmissionResponse ||
                    (this.SearchJobSubmissionResponse != null &&
                    this.SearchJobSubmissionResponse.Equals(input.SearchJobSubmissionResponse))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SavedSearchId != null)
                    hashCode = hashCode * 59 + this.SavedSearchId.GetHashCode();
                if (this.HistoryId != null)
                    hashCode = hashCode * 59 + this.HistoryId.GetHashCode();
                if (this.SearchJobSubmissionResponse != null)
                    hashCode = hashCode * 59 + this.SearchJobSubmissionResponse.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
