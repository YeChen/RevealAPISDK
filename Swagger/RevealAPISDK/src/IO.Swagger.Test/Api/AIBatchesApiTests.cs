/* 
 * Reveal API v2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AIBatchesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AIBatchesApiTests
    {
        private AIBatchesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AIBatchesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AIBatchesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AIBatchesApi
            //Assert.IsInstanceOfType(typeof(AIBatchesApi), instance, "instance is a AIBatchesApi");
        }

        
        /// <summary>
        /// Test AIBatchesAssignQueue
        /// </summary>
        [Test]
        public void AIBatchesAssignQueueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //AssignQueueRequest body = null;
            //var response = instance.AIBatchesAssignQueue(caseId, body);
            //Assert.IsInstanceOf<CreateJobResponse> (response, "response is CreateJobResponse");
        }
        
        /// <summary>
        /// Test AIBatchesGetModelStatistics
        /// </summary>
        [Test]
        public void AIBatchesGetModelStatisticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? userId = null;
            //int? modelId = null;
            //var response = instance.AIBatchesGetModelStatistics(caseId, userId, modelId);
            //Assert.IsInstanceOf<ModelStatistics> (response, "response is ModelStatistics");
        }
        
        /// <summary>
        /// Test AIBatchesGetModels
        /// </summary>
        [Test]
        public void AIBatchesGetModelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? userId = null;
            //int? start = null;
            //int? count = null;
            //var response = instance.AIBatchesGetModels(caseId, userId, start, count);
            //Assert.IsInstanceOf<PaginatedOfListOfAIModel> (response, "response is PaginatedOfListOfAIModel");
        }
        
        /// <summary>
        /// Test AIBatchesGetQueues
        /// </summary>
        [Test]
        public void AIBatchesGetQueuesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? modelId = null;
            //int? userId = null;
            //var response = instance.AIBatchesGetQueues(caseId, modelId, userId);
            //Assert.IsInstanceOf<List<CosmicQueue>> (response, "response is List<CosmicQueue>");
        }
        
        /// <summary>
        /// Test AIBatchesGetTagProfiles
        /// </summary>
        [Test]
        public void AIBatchesGetTagProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? modelId = null;
            //int? userId = null;
            //int? start = null;
            //int? count = null;
            //var response = instance.AIBatchesGetTagProfiles(caseId, modelId, userId, start, count);
            //Assert.IsInstanceOf<PaginatedOfListOfTagProfile> (response, "response is PaginatedOfListOfTagProfile");
        }
        
    }

}
