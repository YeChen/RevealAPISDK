/* 
 * Reveal API v2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing MetadataSearchProfilesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MetadataSearchProfilesApiTests
    {
        private MetadataSearchProfilesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MetadataSearchProfilesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MetadataSearchProfilesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MetadataSearchProfilesApi
            //Assert.IsInstanceOfType(typeof(MetadataSearchProfilesApi), instance, "instance is a MetadataSearchProfilesApi");
        }

        
        /// <summary>
        /// Test MetadataSearchProfilesCreateSearchProfile
        /// </summary>
        [Test]
        public void MetadataSearchProfilesCreateSearchProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //MetadataSearchProfileCreate body = null;
            //var response = instance.MetadataSearchProfilesCreateSearchProfile(caseId, body);
            //Assert.IsInstanceOf<int?> (response, "response is int?");
        }
        
        /// <summary>
        /// Test MetadataSearchProfilesDeleteSearchProfile
        /// </summary>
        [Test]
        public void MetadataSearchProfilesDeleteSearchProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? id = null;
            //instance.MetadataSearchProfilesDeleteSearchProfile(caseId, id);
            
        }
        
        /// <summary>
        /// Test MetadataSearchProfilesGetSearchProfile
        /// </summary>
        [Test]
        public void MetadataSearchProfilesGetSearchProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? id = null;
            //var response = instance.MetadataSearchProfilesGetSearchProfile(caseId, id);
            //Assert.IsInstanceOf<MetadataSearchProfile> (response, "response is MetadataSearchProfile");
        }
        
        /// <summary>
        /// Test MetadataSearchProfilesGetSearchProfileFields
        /// </summary>
        [Test]
        public void MetadataSearchProfilesGetSearchProfileFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? id = null;
            //int? start = null;
            //int? count = null;
            //var response = instance.MetadataSearchProfilesGetSearchProfileFields(caseId, id, start, count);
            //Assert.IsInstanceOf<PaginatedOfIEnumerableOfProfileFieldInclusionItem> (response, "response is PaginatedOfIEnumerableOfProfileFieldInclusionItem");
        }
        
        /// <summary>
        /// Test MetadataSearchProfilesGetSearchProfiles
        /// </summary>
        [Test]
        public void MetadataSearchProfilesGetSearchProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? userId = null;
            //int? start = null;
            //int? count = null;
            //var response = instance.MetadataSearchProfilesGetSearchProfiles(caseId, userId, start, count);
            //Assert.IsInstanceOf<PaginatedOfIEnumerableOfMetadataSearchProfile> (response, "response is PaginatedOfIEnumerableOfMetadataSearchProfile");
        }
        
        /// <summary>
        /// Test MetadataSearchProfilesSetSearchProfileFields
        /// </summary>
        [Test]
        public void MetadataSearchProfilesSetSearchProfileFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? id = null;
            //List<int?> body = null;
            //instance.MetadataSearchProfilesSetSearchProfileFields(caseId, id, body);
            
        }
        
        /// <summary>
        /// Test MetadataSearchProfilesUpdateSearchProfile
        /// </summary>
        [Test]
        public void MetadataSearchProfilesUpdateSearchProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? id = null;
            //MetadataSearchProfileUpdate body = null;
            //instance.MetadataSearchProfilesUpdateSearchProfile(caseId, id, body);
            
        }
        
    }

}
