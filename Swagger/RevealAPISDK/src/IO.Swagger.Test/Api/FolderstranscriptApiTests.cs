/* 
 * Reveal API v2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing FolderstranscriptApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FolderstranscriptApiTests
    {
        private FolderstranscriptApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FolderstranscriptApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FolderstranscriptApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FolderstranscriptApi
            //Assert.IsInstanceOfType(typeof(FolderstranscriptApi), instance, "instance is a FolderstranscriptApi");
        }

        
        /// <summary>
        /// Test TranscriptFoldersCreateFolder
        /// </summary>
        [Test]
        public void TranscriptFoldersCreateFolderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //string organization = null;
            //int? parentId = null;
            //int? displayOrder = null;
            //WorkFolderCreate body = null;
            //var response = instance.TranscriptFoldersCreateFolder(caseId, organization, parentId, displayOrder, body);
            //Assert.IsInstanceOf<WorkFolder> (response, "response is WorkFolder");
        }
        
        /// <summary>
        /// Test TranscriptFoldersDelete
        /// </summary>
        [Test]
        public void TranscriptFoldersDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? id = null;
            //instance.TranscriptFoldersDelete(caseId, id);
            
        }
        
        /// <summary>
        /// Test TranscriptFoldersGet
        /// </summary>
        [Test]
        public void TranscriptFoldersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //long? folderId = null;
            //int? userId = null;
            //bool? immediateOnly = null;
            //bool? getDocumentCounts = null;
            //string uniqueId = null;
            //bool? isAdminView = null;
            //string filterQuery = null;
            //string filterOperator = null;
            //bool? userIdRequested = null;
            //var response = instance.TranscriptFoldersGet(caseId, folderId, userId, immediateOnly, getDocumentCounts, uniqueId, isAdminView, filterQuery, filterOperator, userIdRequested);
            //Assert.IsInstanceOf<List<WorkFolder>> (response, "response is List<WorkFolder>");
        }
        
        /// <summary>
        /// Test TranscriptFoldersGetFolderAccessControl
        /// </summary>
        [Test]
        public void TranscriptFoldersGetFolderAccessControlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? id = null;
            //var response = instance.TranscriptFoldersGetFolderAccessControl(caseId, id);
            //Assert.IsInstanceOf<List<FolderAccessControl>> (response, "response is List<FolderAccessControl>");
        }
        
        /// <summary>
        /// Test TranscriptFoldersLockDownFolder
        /// </summary>
        [Test]
        public void TranscriptFoldersLockDownFolderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? id = null;
            //bool? lockFolder = null;
            //LockWorkFolder body = null;
            //instance.TranscriptFoldersLockDownFolder(caseId, id, lockFolder, body);
            
        }
        
        /// <summary>
        /// Test TranscriptFoldersModifyFolder
        /// </summary>
        [Test]
        public void TranscriptFoldersModifyFolderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? id = null;
            //FolderUpdate body = null;
            //instance.TranscriptFoldersModifyFolder(caseId, id, body);
            
        }
        
        /// <summary>
        /// Test TranscriptFoldersMoveFolder
        /// </summary>
        [Test]
        public void TranscriptFoldersMoveFolderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? id = null;
            //long? parentId = null;
            //int? displayOrder = null;
            //instance.TranscriptFoldersMoveFolder(caseId, id, parentId, displayOrder);
            
        }
        
    }

}
