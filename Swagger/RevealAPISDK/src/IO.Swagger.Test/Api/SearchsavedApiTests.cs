/* 
 * Reveal API v2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SearchsavedApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SearchsavedApiTests
    {
        private SearchsavedApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SearchsavedApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SearchsavedApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SearchsavedApi
            //Assert.IsInstanceOfType(typeof(SearchsavedApi), instance, "instance is a SearchsavedApi");
        }

        
        /// <summary>
        /// Test SavedSearchDeleteSearchFromSearchFolder
        /// </summary>
        [Test]
        public void SavedSearchDeleteSearchFromSearchFolderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //int? folderId = null;
            //long? search = null;
            //instance.SavedSearchDeleteSearchFromSearchFolder(caseId, folderId, search);
            
        }
        
        /// <summary>
        /// Test SavedSearchGetSavedSearches
        /// </summary>
        [Test]
        public void SavedSearchGetSavedSearchesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //string query = null;
            //int? folderId = null;
            //string type = null;
            //bool? sortByAsc = null;
            //int? start = null;
            //int? count = null;
            //var response = instance.SavedSearchGetSavedSearches(caseId, query, folderId, type, sortByAsc, start, count);
            //Assert.IsInstanceOf<PaginatedOfListOfSavedSearch> (response, "response is PaginatedOfListOfSavedSearch");
        }
        
        /// <summary>
        /// Test SavedSearchSaveSearch
        /// </summary>
        [Test]
        public void SavedSearchSaveSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //SavedSearchCreate body = null;
            //var response = instance.SavedSearchSaveSearch(caseId, body);
            //Assert.IsInstanceOf<SearchJobResponse> (response, "response is SearchJobResponse");
        }
        
        /// <summary>
        /// Test SavedSearchUpdateSavedSearch
        /// </summary>
        [Test]
        public void SavedSearchUpdateSavedSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? caseId = null;
            //long? id = null;
            //SavedSearchCreate body = null;
            //var response = instance.SavedSearchUpdateSavedSearch(caseId, id, body);
            //Assert.IsInstanceOf<SearchJobResponse> (response, "response is SearchJobResponse");
        }
        
    }

}
