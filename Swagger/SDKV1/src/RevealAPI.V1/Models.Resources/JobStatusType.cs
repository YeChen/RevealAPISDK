/* 
 * Reveal API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = RevealAPI.V1.Client.SwaggerDateConverter;

namespace RevealAPI.V1.Models.Resources
{
    /// <summary>
    /// Defines JobStatusType
    /// </summary>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum JobStatusType
    {
        
        /// <summary>
        /// Enum Created for value: Created
        /// </summary>
        [EnumMember(Value = "Created")]
        Created = 1,
        
        /// <summary>
        /// Enum Pending for value: Pending
        /// </summary>
        [EnumMember(Value = "Pending")]
        Pending = 2,
        
        /// <summary>
        /// Enum InProcess for value: InProcess
        /// </summary>
        [EnumMember(Value = "InProcess")]
        InProcess = 3,
        
        /// <summary>
        /// Enum Completed for value: Completed
        /// </summary>
        [EnumMember(Value = "Completed")]
        Completed = 4,
        
        /// <summary>
        /// Enum Error for value: Error
        /// </summary>
        [EnumMember(Value = "Error")]
        Error = 5,
        
        /// <summary>
        /// Enum CancelPending for value: CancelPending
        /// </summary>
        [EnumMember(Value = "CancelPending")]
        CancelPending = 6,
        
        /// <summary>
        /// Enum Cancelled for value: Cancelled
        /// </summary>
        [EnumMember(Value = "Cancelled")]
        Cancelled = 7,
        
        /// <summary>
        /// Enum Removed for value: Removed
        /// </summary>
        [EnumMember(Value = "Removed")]
        Removed = 8,
        
        /// <summary>
        /// Enum Modified for value: Modified
        /// </summary>
        [EnumMember(Value = "Modified")]
        Modified = 9
    }

}
