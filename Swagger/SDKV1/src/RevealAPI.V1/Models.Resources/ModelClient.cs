/* 
 * Reveal API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = RevealAPI.V1.Client.SwaggerDateConverter;

namespace RevealAPI.V1.Models.Resources
{
    /// <summary>
    /// ModelClient
    /// </summary>
    [DataContract]
    public partial class ModelClient :  IEquatable<ModelClient>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelClient" /> class.
        /// </summary>
        /// <param name="clientName">clientName.</param>
        /// <param name="clientId">clientId.</param>
        /// <param name="clientNumber">clientNumber.</param>
        /// <param name="addressLine1">addressLine1.</param>
        /// <param name="addressLine2">addressLine2.</param>
        /// <param name="city">city.</param>
        /// <param name="zipCode">zipCode.</param>
        /// <param name="mainOfficePhoneNumber">mainOfficePhoneNumber.</param>
        /// <param name="primaryPhoneNumber">primaryPhoneNumber.</param>
        /// <param name="secondaryPhoneNumber">secondaryPhoneNumber.</param>
        /// <param name="faxNumber">faxNumber.</param>
        /// <param name="notes">notes.</param>
        /// <param name="contactFirstName">contactFirstName.</param>
        /// <param name="contactLastName">contactLastName.</param>
        /// <param name="contactTitle">contactTitle.</param>
        /// <param name="contactDepartment">contactDepartment.</param>
        /// <param name="stateId">stateId.</param>
        /// <param name="createdUserId">createdUserId.</param>
        /// <param name="modifiedUserId">modifiedUserId.</param>
        /// <param name="createdDateTime">createdDateTime.</param>
        /// <param name="modifiedDateTime">modifiedDateTime.</param>
        /// <param name="apiErrorMessage">apiErrorMessage.</param>
        public ModelClient(string clientName = default(string), int? clientId = default(int?), string clientNumber = default(string), string addressLine1 = default(string), string addressLine2 = default(string), string city = default(string), string zipCode = default(string), string mainOfficePhoneNumber = default(string), string primaryPhoneNumber = default(string), string secondaryPhoneNumber = default(string), string faxNumber = default(string), string notes = default(string), string contactFirstName = default(string), string contactLastName = default(string), string contactTitle = default(string), string contactDepartment = default(string), int? stateId = default(int?), int? createdUserId = default(int?), int? modifiedUserId = default(int?), DateTime? createdDateTime = default(DateTime?), DateTime? modifiedDateTime = default(DateTime?), string apiErrorMessage = default(string))
        {
            this.ClientName = clientName;
            this.ClientId = clientId;
            this.ClientNumber = clientNumber;
            this.AddressLine1 = addressLine1;
            this.AddressLine2 = addressLine2;
            this.City = city;
            this.ZipCode = zipCode;
            this.MainOfficePhoneNumber = mainOfficePhoneNumber;
            this.PrimaryPhoneNumber = primaryPhoneNumber;
            this.SecondaryPhoneNumber = secondaryPhoneNumber;
            this.FaxNumber = faxNumber;
            this.Notes = notes;
            this.ContactFirstName = contactFirstName;
            this.ContactLastName = contactLastName;
            this.ContactTitle = contactTitle;
            this.ContactDepartment = contactDepartment;
            this.StateId = stateId;
            this.CreatedUserId = createdUserId;
            this.ModifiedUserId = modifiedUserId;
            this.CreatedDateTime = createdDateTime;
            this.ModifiedDateTime = modifiedDateTime;
            this.ApiErrorMessage = apiErrorMessage;
        }
        
        /// <summary>
        /// Gets or Sets ClientName
        /// </summary>
        [DataMember(Name="clientName", EmitDefaultValue=false)]
        public string ClientName { get; set; }

        /// <summary>
        /// Gets or Sets ClientId
        /// </summary>
        [DataMember(Name="clientId", EmitDefaultValue=false)]
        public int? ClientId { get; set; }

        /// <summary>
        /// Gets or Sets ClientNumber
        /// </summary>
        [DataMember(Name="clientNumber", EmitDefaultValue=false)]
        public string ClientNumber { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine1
        /// </summary>
        [DataMember(Name="addressLine1", EmitDefaultValue=false)]
        public string AddressLine1 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine2
        /// </summary>
        [DataMember(Name="addressLine2", EmitDefaultValue=false)]
        public string AddressLine2 { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets ZipCode
        /// </summary>
        [DataMember(Name="zipCode", EmitDefaultValue=false)]
        public string ZipCode { get; set; }

        /// <summary>
        /// Gets or Sets MainOfficePhoneNumber
        /// </summary>
        [DataMember(Name="mainOfficePhoneNumber", EmitDefaultValue=false)]
        public string MainOfficePhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryPhoneNumber
        /// </summary>
        [DataMember(Name="primaryPhoneNumber", EmitDefaultValue=false)]
        public string PrimaryPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryPhoneNumber
        /// </summary>
        [DataMember(Name="secondaryPhoneNumber", EmitDefaultValue=false)]
        public string SecondaryPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets FaxNumber
        /// </summary>
        [DataMember(Name="faxNumber", EmitDefaultValue=false)]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets Notes
        /// </summary>
        [DataMember(Name="notes", EmitDefaultValue=false)]
        public string Notes { get; set; }

        /// <summary>
        /// Gets or Sets ContactFirstName
        /// </summary>
        [DataMember(Name="contactFirstName", EmitDefaultValue=false)]
        public string ContactFirstName { get; set; }

        /// <summary>
        /// Gets or Sets ContactLastName
        /// </summary>
        [DataMember(Name="contactLastName", EmitDefaultValue=false)]
        public string ContactLastName { get; set; }

        /// <summary>
        /// Gets or Sets ContactTitle
        /// </summary>
        [DataMember(Name="contactTitle", EmitDefaultValue=false)]
        public string ContactTitle { get; set; }

        /// <summary>
        /// Gets or Sets ContactDepartment
        /// </summary>
        [DataMember(Name="contactDepartment", EmitDefaultValue=false)]
        public string ContactDepartment { get; set; }

        /// <summary>
        /// Gets or Sets StateId
        /// </summary>
        [DataMember(Name="stateId", EmitDefaultValue=false)]
        public int? StateId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedUserId
        /// </summary>
        [DataMember(Name="createdUserId", EmitDefaultValue=false)]
        public int? CreatedUserId { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedUserId
        /// </summary>
        [DataMember(Name="modifiedUserId", EmitDefaultValue=false)]
        public int? ModifiedUserId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDateTime
        /// </summary>
        [DataMember(Name="createdDateTime", EmitDefaultValue=false)]
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedDateTime
        /// </summary>
        [DataMember(Name="modifiedDateTime", EmitDefaultValue=false)]
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets ApiErrorMessage
        /// </summary>
        [DataMember(Name="apiErrorMessage", EmitDefaultValue=false)]
        public string ApiErrorMessage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ModelClient {\n");
            sb.Append("  ClientName: ").Append(ClientName).Append("\n");
            sb.Append("  ClientId: ").Append(ClientId).Append("\n");
            sb.Append("  ClientNumber: ").Append(ClientNumber).Append("\n");
            sb.Append("  AddressLine1: ").Append(AddressLine1).Append("\n");
            sb.Append("  AddressLine2: ").Append(AddressLine2).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  ZipCode: ").Append(ZipCode).Append("\n");
            sb.Append("  MainOfficePhoneNumber: ").Append(MainOfficePhoneNumber).Append("\n");
            sb.Append("  PrimaryPhoneNumber: ").Append(PrimaryPhoneNumber).Append("\n");
            sb.Append("  SecondaryPhoneNumber: ").Append(SecondaryPhoneNumber).Append("\n");
            sb.Append("  FaxNumber: ").Append(FaxNumber).Append("\n");
            sb.Append("  Notes: ").Append(Notes).Append("\n");
            sb.Append("  ContactFirstName: ").Append(ContactFirstName).Append("\n");
            sb.Append("  ContactLastName: ").Append(ContactLastName).Append("\n");
            sb.Append("  ContactTitle: ").Append(ContactTitle).Append("\n");
            sb.Append("  ContactDepartment: ").Append(ContactDepartment).Append("\n");
            sb.Append("  StateId: ").Append(StateId).Append("\n");
            sb.Append("  CreatedUserId: ").Append(CreatedUserId).Append("\n");
            sb.Append("  ModifiedUserId: ").Append(ModifiedUserId).Append("\n");
            sb.Append("  CreatedDateTime: ").Append(CreatedDateTime).Append("\n");
            sb.Append("  ModifiedDateTime: ").Append(ModifiedDateTime).Append("\n");
            sb.Append("  ApiErrorMessage: ").Append(ApiErrorMessage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ModelClient);
        }

        /// <summary>
        /// Returns true if ModelClient instances are equal
        /// </summary>
        /// <param name="input">Instance of ModelClient to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ModelClient input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ClientName == input.ClientName ||
                    (this.ClientName != null &&
                    this.ClientName.Equals(input.ClientName))
                ) && 
                (
                    this.ClientId == input.ClientId ||
                    (this.ClientId != null &&
                    this.ClientId.Equals(input.ClientId))
                ) && 
                (
                    this.ClientNumber == input.ClientNumber ||
                    (this.ClientNumber != null &&
                    this.ClientNumber.Equals(input.ClientNumber))
                ) && 
                (
                    this.AddressLine1 == input.AddressLine1 ||
                    (this.AddressLine1 != null &&
                    this.AddressLine1.Equals(input.AddressLine1))
                ) && 
                (
                    this.AddressLine2 == input.AddressLine2 ||
                    (this.AddressLine2 != null &&
                    this.AddressLine2.Equals(input.AddressLine2))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.ZipCode == input.ZipCode ||
                    (this.ZipCode != null &&
                    this.ZipCode.Equals(input.ZipCode))
                ) && 
                (
                    this.MainOfficePhoneNumber == input.MainOfficePhoneNumber ||
                    (this.MainOfficePhoneNumber != null &&
                    this.MainOfficePhoneNumber.Equals(input.MainOfficePhoneNumber))
                ) && 
                (
                    this.PrimaryPhoneNumber == input.PrimaryPhoneNumber ||
                    (this.PrimaryPhoneNumber != null &&
                    this.PrimaryPhoneNumber.Equals(input.PrimaryPhoneNumber))
                ) && 
                (
                    this.SecondaryPhoneNumber == input.SecondaryPhoneNumber ||
                    (this.SecondaryPhoneNumber != null &&
                    this.SecondaryPhoneNumber.Equals(input.SecondaryPhoneNumber))
                ) && 
                (
                    this.FaxNumber == input.FaxNumber ||
                    (this.FaxNumber != null &&
                    this.FaxNumber.Equals(input.FaxNumber))
                ) && 
                (
                    this.Notes == input.Notes ||
                    (this.Notes != null &&
                    this.Notes.Equals(input.Notes))
                ) && 
                (
                    this.ContactFirstName == input.ContactFirstName ||
                    (this.ContactFirstName != null &&
                    this.ContactFirstName.Equals(input.ContactFirstName))
                ) && 
                (
                    this.ContactLastName == input.ContactLastName ||
                    (this.ContactLastName != null &&
                    this.ContactLastName.Equals(input.ContactLastName))
                ) && 
                (
                    this.ContactTitle == input.ContactTitle ||
                    (this.ContactTitle != null &&
                    this.ContactTitle.Equals(input.ContactTitle))
                ) && 
                (
                    this.ContactDepartment == input.ContactDepartment ||
                    (this.ContactDepartment != null &&
                    this.ContactDepartment.Equals(input.ContactDepartment))
                ) && 
                (
                    this.StateId == input.StateId ||
                    (this.StateId != null &&
                    this.StateId.Equals(input.StateId))
                ) && 
                (
                    this.CreatedUserId == input.CreatedUserId ||
                    (this.CreatedUserId != null &&
                    this.CreatedUserId.Equals(input.CreatedUserId))
                ) && 
                (
                    this.ModifiedUserId == input.ModifiedUserId ||
                    (this.ModifiedUserId != null &&
                    this.ModifiedUserId.Equals(input.ModifiedUserId))
                ) && 
                (
                    this.CreatedDateTime == input.CreatedDateTime ||
                    (this.CreatedDateTime != null &&
                    this.CreatedDateTime.Equals(input.CreatedDateTime))
                ) && 
                (
                    this.ModifiedDateTime == input.ModifiedDateTime ||
                    (this.ModifiedDateTime != null &&
                    this.ModifiedDateTime.Equals(input.ModifiedDateTime))
                ) && 
                (
                    this.ApiErrorMessage == input.ApiErrorMessage ||
                    (this.ApiErrorMessage != null &&
                    this.ApiErrorMessage.Equals(input.ApiErrorMessage))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ClientName != null)
                    hashCode = hashCode * 59 + this.ClientName.GetHashCode();
                if (this.ClientId != null)
                    hashCode = hashCode * 59 + this.ClientId.GetHashCode();
                if (this.ClientNumber != null)
                    hashCode = hashCode * 59 + this.ClientNumber.GetHashCode();
                if (this.AddressLine1 != null)
                    hashCode = hashCode * 59 + this.AddressLine1.GetHashCode();
                if (this.AddressLine2 != null)
                    hashCode = hashCode * 59 + this.AddressLine2.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.ZipCode != null)
                    hashCode = hashCode * 59 + this.ZipCode.GetHashCode();
                if (this.MainOfficePhoneNumber != null)
                    hashCode = hashCode * 59 + this.MainOfficePhoneNumber.GetHashCode();
                if (this.PrimaryPhoneNumber != null)
                    hashCode = hashCode * 59 + this.PrimaryPhoneNumber.GetHashCode();
                if (this.SecondaryPhoneNumber != null)
                    hashCode = hashCode * 59 + this.SecondaryPhoneNumber.GetHashCode();
                if (this.FaxNumber != null)
                    hashCode = hashCode * 59 + this.FaxNumber.GetHashCode();
                if (this.Notes != null)
                    hashCode = hashCode * 59 + this.Notes.GetHashCode();
                if (this.ContactFirstName != null)
                    hashCode = hashCode * 59 + this.ContactFirstName.GetHashCode();
                if (this.ContactLastName != null)
                    hashCode = hashCode * 59 + this.ContactLastName.GetHashCode();
                if (this.ContactTitle != null)
                    hashCode = hashCode * 59 + this.ContactTitle.GetHashCode();
                if (this.ContactDepartment != null)
                    hashCode = hashCode * 59 + this.ContactDepartment.GetHashCode();
                if (this.StateId != null)
                    hashCode = hashCode * 59 + this.StateId.GetHashCode();
                if (this.CreatedUserId != null)
                    hashCode = hashCode * 59 + this.CreatedUserId.GetHashCode();
                if (this.ModifiedUserId != null)
                    hashCode = hashCode * 59 + this.ModifiedUserId.GetHashCode();
                if (this.CreatedDateTime != null)
                    hashCode = hashCode * 59 + this.CreatedDateTime.GetHashCode();
                if (this.ModifiedDateTime != null)
                    hashCode = hashCode * 59 + this.ModifiedDateTime.GetHashCode();
                if (this.ApiErrorMessage != null)
                    hashCode = hashCode * 59 + this.ApiErrorMessage.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
